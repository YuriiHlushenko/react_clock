{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","Clock","state","today","timerId","timerId2","this","window","setInterval","setState","console","info","toUTCString","props","saveClockName","prevProps","clockName","debug","clearInterval","className","React","Component","App","useState","hasClock","setHasClock","setClockName","document","addEventListener","event","preventDefault","name","ReactDOM","render","getElementById"],"mappings":"gMAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAYX,IAAMK,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIN,MAFf,EAKEO,QAAU,EALZ,EAOEC,SAAW,EAPb,uDASE,WAA2B,IAAD,OACxBC,KAAKF,QAAUG,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIN,OAG3Ba,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcZ,OAAO,IAAK,MACvD,KAEHM,KAAKD,SAAWE,OAAOC,aAAY,WACjC,EAAKK,MAAMC,cAAcnB,OACxB,QAnBP,gCAsBE,SAAmBoB,GACbA,EAAUC,YAAcV,KAAKO,MAAMG,WAErCN,QAAQO,MAAR,uBAA8BF,EAAUC,UAAxC,eAAwDV,KAAKO,MAAMG,cAzBzE,kCA6BE,WACEV,KAAKO,MAAMC,cAAcnB,KACzBY,OAAOW,cAAcZ,KAAKF,SAC1BG,OAAOW,cAAcZ,KAAKD,YAhC9B,oBAmCE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKO,MAAMG,YAGb,YAED,sBAAMG,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,MAAMS,cAAcZ,OAAO,IAAK,YA7CtD,GAA2BoB,IAAMC,WCdpBC,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,WAA3C,mBAAOP,EAAP,KAAkBU,EAAlB,KAEAC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAENL,GAAY,MAGdE,SAASC,iBAAiB,SAAS,WACjCH,GAAY,MAKd,OACE,sBAAKN,UAAU,MAAf,UACE,6CAECK,GACC,cAAC,EAAD,CACER,UAAWA,EACXF,cATc,SAACiB,GAAD,OAAkBL,EAAaK,UCdvDC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.5127b8ae.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {\n  clockName: string;\n  saveClockName: (name: string) => void;\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  timerId2 = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    this.timerId2 = window.setInterval(() => {\n      this.props.saveClockName(getRandomName());\n    }, 3300);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.props.saveClockName(getRandomName());\n    window.clearInterval(this.timerId);\n    window.clearInterval(this.timerId2);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { Clock } from './components/Clock';\n\nexport const App: React.FC = () => {\n  const [hasClock, setHasClock] = useState(true);\n  const [clockName, setClockName] = useState('Clock-0');\n\n  document.addEventListener('contextmenu', (event: MouseEvent) => {\n    event.preventDefault();\n\n    setHasClock(false);\n  });\n\n  document.addEventListener('click', () => {\n    setHasClock(true);\n  });\n\n  const saveClockName = (name: string) => setClockName(name);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n\n      {hasClock && (\n        <Clock\n          clockName={clockName}\n          saveClockName={saveClockName}\n        />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}